{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Condition": {
                "actions": {
                    "Insert_row": {
                        "inputs": {
                            "body": {
                                "ID": "@{utcNow()}",
                                "password": "@triggerBody()?['pass']",
                                "username": "@triggerBody()?['username']"
                            },
                            "host": {
                                "connection": {
                                    "referenceName": "postgresql"
                                }
                            },
                            "method": "post",
                            "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[public].[LanwayAdmin]'))}/items"
                        },
                        "runAfter": {
                            "Set_variable": [
                                "Succeeded"
                            ]
                        },
                        "type": "ApiConnection"
                    },
                    "Response": {
                        "inputs": {
                            "statusCode": 200
                        },
                        "kind": "http",
                        "runAfter": {
                            "Insert_row": [
                                "Succeeded"
                            ]
                        },
                        "type": "Response"
                    },
                    "Set_variable": {
                        "inputs": {
                            "name": "isExist",
                            "value": false
                        },
                        "runAfter": {},
                        "type": "SetVariable"
                    }
                },
                "else": {
                    "actions": {
                        "Response_2": {
                            "inputs": {
                                "statusCode": 409
                            },
                            "kind": "http",
                            "runAfter": {},
                            "type": "Response"
                        }
                    }
                },
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@length(body('get_rows')?['value'])",
                                0
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "Get_rows": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Get_rows": {
                "inputs": {
                    "host": {
                        "connection": {
                            "referenceName": "postgresql"
                        }
                    },
                    "method": "get",
                    "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[public].[LanwayAdmin]'))}/items",
                    "queries": {
                        "$filter": "username eq '@{triggerBody()?['username']}'"
                    }
                },
                "runAfter": {
                    "Initialize_variable": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "Initialize_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "isExist",
                            "type": "boolean",
                            "value": true
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "triggers": {
            "manual": {
                "inputs": {
                    "schema": {
                        "properties": {
                            "pass": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "kind": "Http",
                "type": "Request"
            }
        }
    },
    "kind": "Stateless"
}